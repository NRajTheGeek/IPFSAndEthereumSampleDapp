a = eth.accounts[0]
web3.eth.defaultAccount = a;

// abi and bytecode generated from simplestorage.sol:
// > solcjs --bin --abi simplestorage.sol
var abi = [ { "constant": true, "inputs": [], "name": "bidPrice", "outputs": [ { "name": "", "type": "uint256" } ], "payable": false, "stateMutability": "view", "type": "function" }, { "inputs": [ { "name": "initialBid", "type": "uint256" } ], "payable": false, "stateMutability": "nonpayable", "type": "constructor" }, { "constant": false, "inputs": [ { "name": "bid", "type": "uint256" } ], "name": "set", "outputs": [], "payable": false, "stateMutability": "nonpayable", "type": "function" }, { "constant": true, "inputs": [], "name": "get", "outputs": [ { "name": "retBid", "type": "uint256" } ], "payable": false, "stateMutability": "view", "type": "function" } ];

var bytecode = "0x608060405234801561001057600080fd5b5060405160208061034e8339810180604052810190808051906020019092919050505080600081101515156100d3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603b8152602001807f76616c756520746f2062652073657420696e20636f6e7374727563746f72207381526020017f686f756c64206265206e6f6e2d6e656761746976652075696e742e000000000081525060400191505060405180910390fd5b816000819055505050610263806100eb6000396000f300608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806319afe4731461005c57806360fe47b1146100875780636d4ce63c146100b4575b600080fd5b34801561006857600080fd5b506100716100df565b6040518082815260200191505060405180910390f35b34801561009357600080fd5b506100b2600480360381019080803590602001909291905050506100e5565b005b3480156100c057600080fd5b506100c961022e565b6040518082815260200191505060405180910390f35b60005481565b80600081111515610184576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001807f76616c756520746f206265207365742073686f756c64206265206e6f6e2d6e6581526020017f6761746976652075696e742e000000000000000000000000000000000000000081525060400191505060405180910390fd5b60008114151515610223576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001807f76616c756520746f206265207365742073686f756c64206265206e6f6e2d7a6581526020017f726f2075696e742e00000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b816000819055505050565b600080549050905600a165627a7a72305820373cbbb36b68959be3e11ed44d5629bfe4942ef9e5dfe9b10e4477cc2b439d910029";

var bidderContract = web3.eth.contract(abi);
var simple = bidderContract.new(42, {from:web3.eth.accounts[0], data: bytecode, gas: 0x47b760, privateFor: ["QfeDAys9MPDs2XHExtc84jKGHxZg/aj52DTh0vtA3Xc="]}, function(e, contract) {
	if (e) {
		console.log("err creating contract", e);
	} else {
		if (!contract.address) {
			console.log("Contract transaction send: TransactionHash: " + contract.transactionHash + " waiting to be mined...");
		} else {
			console.log("Contract mined! Address: " + contract.address);
			console.log(contract.methods);
			console.log(contract.get())
			console.log(contract.set(500).send(function(data){
				console.log(data)
			}))

			console.log(contract.get())

		}
	}
});
